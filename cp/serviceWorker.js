var cacheName="cache-v5",offlineUrl="/offline",files=["/",offlineUrl,"/error","https://cdn.nnsvn.me/cp/css/packed.css","https://cdn.nnsvn.me/cp/js/packed.js","https://cdn.nnsvn.me/cp/js/index.js","/uettoolkit","https://cdn.jsdelivr.net/npm/@tabler/icons-webfont@3.0.2/dist/tabler-icons.min.css","https://cdn.jsdelivr.net/npm/apexcharts","https://cdn.nnsvn.me/cp/libs/select2/select2.min.css","https://cdn.nnsvn.me/cp/libs/select2/theme.min.css","https://cdn.nnsvn.me/cp/libs/select2/select2.min.js","https://cdn.nnsvn.me/cp/js/libs/select2.js","https://cdn.jsdelivr.net/npm/bootstrap-table@1.22.3/dist/bootstrap-table.min.css","https://cdn.nnsvn.me/cp/js/bootstrap-table.js","https://cdn.nnsvn.me/cp/js/encrypt.js","https://cdn.nnsvn.me/cp/js/pages/uettoolkit.js","https://cdn.nnsvn.me/cp/manifest.json","https://cdn.nnsvn.me/cp/img/icons/icon-144x144.png","https://cdn.nnsvn.me/cp/fonts/Roobert-Regular.ttf"];async function cacheFirst(n){var t=await caches.match(n);if(t)return t;try{return await fetch(n)}catch(t){return caches.match(n).then(function(t){return caches.match(offlineUrl)})}}async function networkFirst(n){const e=await caches.open(cacheName);try{var t=await fetch(n);return e.put(n,t.clone()).catch(t=>{console.warn(n.url+": "+t.message)}),t}catch(t){return e.match(n).then(function(t){return e.match(offlineUrl)})}}self.addEventListener("install",t=>{console.info("Event: Install"),t.waitUntil(caches.open(cacheName).then(t=>t.addAll(files).then(()=>(console.info("All files are cached"),self.skipWaiting())).catch(t=>{console.error("Failed to cache",t)})))}),self.addEventListener("fetch",t=>{var n;t.request.url.startsWith("chrome-extension")||t.request.url.includes("extension")||0!==t.request.url.indexOf("http")||(n=t.request,new URL(n.url).origin===location.origin?t.respondWith(cacheFirst(n)):t.respondWith(networkFirst(n)))}),self.addEventListener("activate",t=>{console.info("Event: Activate"),t.waitUntil(caches.keys().then(t=>Promise.all(t.map(t=>{if(t!==cacheName)return caches.delete(t)}))).then(function(){return console.info("Old caches are cleared!"),self.clients.claim()}))}),self.addEventListener("push",t=>{console.info("Event: Push");t.waitUntil(self.registration.showNotification("Push notification demo",{body:"click to return to application",tag:"demo",icon:"/img/icons/icon-192x192.png",badge:"/img/icons/icon-192x192.png",actions:[{action:"yes",title:"I ♥ this app!"},{action:"no",title:"I don't like this app"}]}))}),self.addEventListener("sync",t=>{"github"!==t.tag&&"test-tag-from-devtools"!==t.tag||t.waitUntil(self.clients.matchAll().then(t=>t.map(t=>t.postMessage("online"))).catch(t=>{console.error(t)}))}),self.addEventListener("notificationclick",t=>{"yes"===t.action?console.log("I ♥ this app!"):"no"===t.action&&console.warn("I don't like this app"),t.notification.close(),t.waitUntil(clients.matchAll({type:"window"}).then(t=>{for(var n=0;n<t.length;n++){var e=t[n];if("/"===e.url&&"focus"in e)return e.focus()}if(t.openWindow)return t.openWindow("/")}).catch(t=>{console.error(t)}))});